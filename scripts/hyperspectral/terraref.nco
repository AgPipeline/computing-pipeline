// -*-C++-*-

/* Purpose: NCO/ncap2 script to Combine 2D TR fractional exposure into single 3D variable
   Usage:
   ncap2 -v -O -S ~/terraref/computing-pipeline/scripts/hyperspectral/terraref.nco ${DATA}/terraref/test_raw.nc ${DATA}/terraref/test_raw_3d.nc
   ncap2 -v -O -S ~/terraref/computing-pipeline/scripts/hyperspectral/terraref.nco ${DATA}/terraref/whiteReference_raw.nc ${DATA}/terraref/whiteReference_3d.nc
   ncap2 -v -O -S ~/terraref/computing-pipeline/scripts/hyperspectral/terraref.nco ${DATA}/terraref/MovingSensor/SWIR/2016-03-05/2016-03-05__09-46_17_450/8d54accb-0858-4e31-aaac-e021b31f3188_raw ${DATA}/terraref/foo_3d.nc */

*bnd_nbr=926;
defdim("band",bnd_nbr); 
xps_frc[band,x,y]=0.0f; 
xps_frc@long_name="Fractional exposure";
xps_frc@meaning="Ratio of actual to fully exposed (saturated) channel";
xps_frc@units="fraction";
band[band]=0.0f;
band@long_name="Wavelength";
band@units="nanometer";

for(*bnd_idx=1;bnd_idx<=bnd_nbr;bnd_idx++){
  // Current variable has name produced by gdal_translate
  {  @var_crr=snprint(bnd_idx,"Band%d"); }
  print(@var_crr,"%s ");

  // Copy band 2D raster into 3D image hypercube
  xps_frc((bnd_idx-1),:,:)=*@var_crr;   

  // Copy wavelength attribute into band coordinate
  //  band(bnd_idx-1)=*@var_crr@wavelength;
 } // !bnd_idx

// Sanity check: Make sure Band10 minus tenth band is zero
err_chk10=(Band10-xps_frc(9,:,:)).total();
err_chk300=(Band300-xps_frc(299,:,:)).total();
err_chk926=(Band926-xps_frc(925,:,:)).total();

print(err_chk10);
print(err_chk300);
print(err_chk926);
